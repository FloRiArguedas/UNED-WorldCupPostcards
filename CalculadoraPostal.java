/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_1_floricela;
//Importar clases
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Flory
 */
public class CalculadoraPostal extends javax.swing.JFrame {
    //Declaraciones
    private static Postal [] estadios = new Postal [10];
    private static String [] codigos_estadios = new String [10];
    private static Postal [] pagina_principal = new Postal [8];
    private static String [] codigos_p_principal = new String [8];
    private static Postal [] museo_fifa = new Postal [11];
    private static String [] codigos_m_fifa = new String [11];
    private static String [] p_extra_sticker = {"BASE", "BRONCE", "SILVER", "GOLD"}; 
    private static String [] codigos_e_sticker = new String [80];
    private static Postal [] extra_sticker = new Postal [80];
    private static String [] p_postales = {"QAT", "ECU", "SEN", "NED","ENG","IRN","USA","WAL","ARG","KSA","MEX","POL","FRA","AUS","DEN","TUN","ESP","CRC","GER","JPN","BEL","CAN","MAR","CRO","BRA","SRB","SUI","CMR","POR","GHA","URU","KOR"}; 
    private static String [] codigos_postales = new String [608];
    private static Postal [] postales = new Postal [608];
    private static DefaultTableModel modelo_jtable = new DefaultTableModel (); //Creo el modelo para usarlo con el Jtable.
    private static int indice_postal;
    private static String tipo_postal = "Pagina Principal";
    private static Postal puntero;
    private static String nombre;
    private static String cedula;
    private static int [] costo_postal_añadida = new int [40];
    public static int total;
    public static int subtotal;
    private static int postalnueva=0;
    private static int cont_pagina_p=0;
    private static int cont_estadio=0;
    private static int cont_extra=0;
    private static int cont_postales=0;
    private static int cont_museo=0;
    
    
    //Función para Añadir al arreglo los atributos de la postal seleccionada, para visualizarlos en las columnas de Jtable
    private static void compra_postal(){
        String [] postal_añadir = new String [3];//Declaro Array tipo String para ir guargando las postales seleccionadas.
        postal_añadir[0] = puntero.getcategoria();
        String string_costo= String.valueOf(puntero.getCosto());//Convierto el atributo int del costo, a string para poder guardarlo en el array.
        postal_añadir[1] = (string_costo);
        postal_añadir[2] = puntero.getCodigo();
        modelo_jtable.addRow(postal_añadir);
        //Guardar en un arreglo los costos de las postales añadidas, para generar luego el cobro.
        int costo_de_postal = Integer.parseInt(string_costo);//Convierto nuevamente a int el costo de la postal
        costo_postal_añadida [postalnueva] = (costo_de_postal);//Se utiliza el arreglo para guardar los costos de las postales añadidas
        postalnueva++;
        
    }
    

    /**
     * Creates new form CalculadoraPostal
     */
    public CalculadoraPostal() {
        initComponents();
        this.setLocationRelativeTo(null); //Coloco la ventana en el centro de la pantalla
        //Seteo el modelo del Jtable para poder usar el constructor de DefaultTableModel
        jTable_postales_compradas.setModel(modelo_jtable);
        //Creación de columnas en el modelo
        modelo_jtable.addColumn("Categoría");
        modelo_jtable.addColumn("Costo");
        modelo_jtable.addColumn("Postales"); 
        //Inicio las casillas de envio ocultas
        jTextField_direccion_para_envio.setVisible(false);
        Label_direccion_envio.setVisible(false);
        this.setTitle("Todo Fut - QATAR 2022");
        Label_costo_envio.setVisible(false);
        jlista_postales.setListData(codigos_p_principal);//Pongo por default la lista de postales de la página príncipal
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel_principal = new javax.swing.JPanel();
        label_nombre = new javax.swing.JLabel();
        textbox_nombre = new javax.swing.JTextField();
        label_cedula = new javax.swing.JLabel();
        textbox_cedula = new javax.swing.JTextField();
        menu_secciones = new javax.swing.JComboBox<>();
        label_seleccione_secciones = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlista_postales = new javax.swing.JList<>();
        label_seleccionar_postal = new javax.swing.JLabel();
        boton_agregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_postales_compradas = new javax.swing.JTable();
        boton_comprar = new javax.swing.JButton();
        jCheckBox_envio = new javax.swing.JCheckBox();
        Label_direccion_envio = new javax.swing.JLabel();
        jTextField_direccion_para_envio = new javax.swing.JTextField();
        Label_costo_envio = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(141, 28, 61));

        panel_principal.setBackground(new java.awt.Color(141, 28, 61));

        label_nombre.setForeground(new java.awt.Color(255, 255, 255));
        label_nombre.setText("Nombre:");

        textbox_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textbox_nombreActionPerformed(evt);
            }
        });

        label_cedula.setForeground(new java.awt.Color(255, 255, 255));
        label_cedula.setText("Cédula:");

        textbox_cedula.setToolTipText("Ej: 115670034");
        textbox_cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textbox_cedulaActionPerformed(evt);
            }
        });

        menu_secciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pagina Principal", "Estadios", "Extra Sticker", "Postales", "Museo FIFA" }));
        menu_secciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_seccionesActionPerformed(evt);
            }
        });

        label_seleccione_secciones.setForeground(new java.awt.Color(255, 255, 255));
        label_seleccione_secciones.setText("Seleccione la sección:");

        jlista_postales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlista_postalesMouseClicked(evt);
            }
        });
        jlista_postales.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlista_postalesValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jlista_postales);

        label_seleccionar_postal.setForeground(new java.awt.Color(255, 255, 255));
        label_seleccionar_postal.setText("Seleccione las postales:");

        boton_agregar.setText("Agregar Postal");
        boton_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_agregarActionPerformed(evt);
            }
        });

        jTable_postales_compradas.setBackground(new java.awt.Color(239, 184, 16));
        jTable_postales_compradas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Categoría", "Costo", "Postales"
            }
        ));
        jScrollPane1.setViewportView(jTable_postales_compradas);

        boton_comprar.setText("Comprar");
        boton_comprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_comprarActionPerformed(evt);
            }
        });

        jCheckBox_envio.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox_envio.setText("¿Desea envío a Domicilio?");
        jCheckBox_envio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_envioActionPerformed(evt);
            }
        });

        Label_direccion_envio.setForeground(new java.awt.Color(255, 255, 255));
        Label_direccion_envio.setText("Dirección de envío: ");

        Label_costo_envio.setForeground(new java.awt.Color(255, 255, 255));
        Label_costo_envio.setText("El envío tiene un costo de: ¢3000.00 colones");

        javax.swing.GroupLayout panel_principalLayout = new javax.swing.GroupLayout(panel_principal);
        panel_principal.setLayout(panel_principalLayout);
        panel_principalLayout.setHorizontalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addComponent(label_nombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textbox_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_cedula)
                        .addGap(18, 18, 18)
                        .addComponent(textbox_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_principalLayout.createSequentialGroup()
                                .addComponent(label_seleccione_secciones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menu_secciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_principalLayout.createSequentialGroup()
                                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(boton_agregar)
                                    .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(label_seleccionar_postal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addGap(113, 113, 113)
                                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_principalLayout.createSequentialGroup()
                                        .addComponent(Label_direccion_envio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField_direccion_para_envio, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panel_principalLayout.createSequentialGroup()
                                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Label_costo_envio)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(panel_principalLayout.createSequentialGroup()
                                        .addComponent(jCheckBox_envio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(boton_comprar)
                                        .addGap(11, 11, 11)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panel_principalLayout.setVerticalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_nombre)
                    .addComponent(textbox_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_cedula)
                    .addComponent(textbox_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_seleccione_secciones)
                    .addComponent(menu_secciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addComponent(label_seleccionar_postal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_agregar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_envio)
                    .addComponent(boton_comprar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Label_costo_envio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_direccion_envio)
                    .addComponent(jTextField_direccion_para_envio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        label_nombre.getAccessibleContext().setAccessibleName("Label_Nombre");
        textbox_nombre.getAccessibleContext().setAccessibleDescription("Eje: Floricela");
        label_seleccione_secciones.getAccessibleContext().setAccessibleName("Seleccione la sección: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textbox_cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textbox_cedulaActionPerformed
        
    }//GEN-LAST:event_textbox_cedulaActionPerformed

    private void boton_comprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_comprarActionPerformed
        cedula = textbox_cedula.getText();//Capturo cedula
        nombre =textbox_nombre.getText();//Capturo nombre
        //Validar que el usuario no deje casillas en blanco o no realice compra de postales
        boolean bandera=true; //Creo una bandera en caso que no se llenen los datos, no despliega factura
        if (textbox_nombre.getText().length()==0 || textbox_cedula.getText().length()==0) {
            JOptionPane.showMessageDialog(this,("Debe llenar todas las casillas con sus datos"));
            bandera=false;
        }
        if (jCheckBox_envio.isSelected()&& jTextField_direccion_para_envio.getText().length()==0){
            JOptionPane.showMessageDialog(this,("Si desea envío debe indicar la dirección"));
            bandera=false;
        }
        if (modelo_jtable.getRowCount() == 0){
            JOptionPane.showMessageDialog(this,(" Para poder realizar una compra, debe seleccionar las postales"));
            bandera=false;
        }
        
              
        //Genero el total de la compra
        total=0;
        subtotal=0;
        
        for (int i=0; i<postalnueva; i++){
            total = total+costo_postal_añadida[i];
        }
        //Añado el costo de envío al total de la factura si el cliente lo selecciona
        if (jCheckBox_envio.isSelected()){
            int costo_envio = 3000;
            total = total+costo_envio;
            subtotal = total-costo_envio;//Creo esta variable para mostrar un subtotal cuando hay envío
        }
     
      //Abro ventana para mostrar factura
      if (bandera==true){
      VentanaFactura factura = new VentanaFactura(); //Instancio la ventana para la factura
      factura.setVisible(true);//Hago visible la ventana de la factura
      this.setVisible(false);//Oculto la ventana de esta clase calculadora postal
      //Condiciono mostrar un subtotal cuando hay envio
      if (jCheckBox_envio.isSelected()){
      String string_subtotal= String.valueOf(subtotal);//Convierto el subtotal a String para mostrarlo en la factura
      VentanaFactura.Label_subtotal.setVisible(true);
      VentanaFactura.Label_envio.setVisible(true);
      VentanaFactura.Label_subtotal.setText(("Subtotal: ¢")+string_subtotal);
      }
      String string_total= String.valueOf(total);//Convierto el total a String para mostrarlo en la factura
      VentanaFactura.Label_total.setText(("El total a pagar es: ¢")+string_total);
      VentanaFactura.Label_nombre_factura.setText(nombre);
      VentanaFactura.Label_cedula_factura.setText(cedula);
      VentanaFactura.jTable_detalle_compra_factura.setModel(modelo_jtable);//Le paso a la tabla de la factura el modelo con las postales compradas
      
      }
      
    }//GEN-LAST:event_boton_comprarActionPerformed

    private void menu_seccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_seccionesActionPerformed
        
        JComboBox cb = (JComboBox)evt.getSource(); // Extraer el objeto combobox del evento
        tipo_postal = (String)cb.getSelectedItem(); // Al combobox le extraemos el item selecccionado
        int indice_categoria = menu_secciones.getSelectedIndex();

        //If para poder crear acciones cuando el usuario seleccione la categoría del combobox
        if (tipo_postal.equals("Pagina Principal")){
            jlista_postales.setListData(codigos_p_principal);
        }
        else if (tipo_postal.equals("Estadios")){
            jlista_postales.setListData(codigos_estadios);
        }
        else if (tipo_postal.equals("Extra Sticker")){
            jlista_postales.setListData(codigos_e_sticker);
        }
        else if (tipo_postal.equals("Museo FIFA")){
            jlista_postales.setListData(codigos_m_fifa);
        }
        else if (tipo_postal.equals("Postales")){
            jlista_postales.setListData(codigos_postales);
        }
        else {
            String[] a = {};
            jlista_postales.setListData(a);
        }

    }//GEN-LAST:event_menu_seccionesActionPerformed
//Programar lo que se realiza cuando el usuario de clic en la lista de postales
    private void jlista_postalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlista_postalesMouseClicked
        //Extraigo del objeto lista postales, el índice seleccionado y se guarda en variable.
        indice_postal = jlista_postales.getSelectedIndex(); 
    }//GEN-LAST:event_jlista_postalesMouseClicked

    private void jlista_postalesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlista_postalesValueChanged

    }//GEN-LAST:event_jlista_postalesValueChanged

    private void boton_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_agregarActionPerformed
        
        //Creo un manejo de excepciones, en caso de que el usuario no seleccione sección o postal para agregar.
        
        try {
        //Al dar clic en el botón de agregar se guardar el valor seleccionado y se muestra
        String postal_select = jlista_postales.getSelectedValue();
        
        if (postal_select == null){
            JOptionPane.showMessageDialog(this, "Debe seleccionar la postal");
        }
        
        //Indicarle al puntero, hacia que arreglo e índice dirigirse, para posterior guardarlo en postales_compradas.
        //Indicarle al usuario la restricción de compras por sección y agregar la compra.
        if (tipo_postal.equals("Pagina Principal")&& postal_select != null){
            puntero = pagina_principal [indice_postal] ; 
            cont_pagina_p++;
            if (cont_pagina_p<6){
                compra_postal();
                JOptionPane.showMessageDialog(this, "Postal Seleccionada: "+postal_select);
            } else {
                JOptionPane.showMessageDialog(this, "No puede comprar más de 5 postales de la Página Principal");
            }
        }
        else if (tipo_postal.equals("Estadios")&& postal_select != null){
            puntero = estadios [indice_postal] ;
            cont_estadio++;
            if (cont_estadio<6){
                JOptionPane.showMessageDialog(this, "Postal Seleccionada: "+postal_select);
                compra_postal();
            } else {
                JOptionPane.showMessageDialog(this, "No puede comprar más de 5 postales Estadio");
            }
        }
        else if (tipo_postal.equals("Extra Sticker")&& postal_select != null){
            puntero = extra_sticker [indice_postal] ;
            cont_extra++;
            if (cont_extra<6){
                compra_postal();
                JOptionPane.showMessageDialog(this, "Postal Seleccionada: "+postal_select);
            } else {
                JOptionPane.showMessageDialog(this, "No puede comprar más de 5 Extra Sticker");
            }
        }
        else if (tipo_postal.equals("Postales")&& postal_select != null){
            puntero = postales [indice_postal] ;
            cont_postales++;
            if (cont_postales<21){
                compra_postal();
                JOptionPane.showMessageDialog(this, "Postal Seleccionada: "+postal_select);
            } else {
                JOptionPane.showMessageDialog(this, "No puede comprar más de 20 postales");
            }
        }
        else if (tipo_postal.equals("Museo FIFA")&& postal_select != null){
            puntero = museo_fifa [indice_postal] ;
            cont_museo++;
            if (cont_museo<6){
                compra_postal();
                JOptionPane.showMessageDialog(this, "Postal Seleccionada: "+postal_select);
            } else {
                JOptionPane.showMessageDialog(this, "No puede comprar más de 5 postales Museo FIFA");
            }
         }
        } catch (Exception ERROR){
            JOptionPane.showMessageDialog(this, "A ocurrido un error inesperado, debe seleccionar la sección y postal a comprar","ERROR",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_boton_agregarActionPerformed

    private void textbox_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textbox_nombreActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_textbox_nombreActionPerformed

    private void jCheckBox_envioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_envioActionPerformed
        // Activar casilla para ingreso de dirección de envío
        if (jCheckBox_envio.isSelected()){
            jTextField_direccion_para_envio.setVisible(true);
            Label_direccion_envio.setVisible(true);
            Label_costo_envio.setVisible(true);
        }else{
            jTextField_direccion_para_envio.setVisible(false);
            Label_direccion_envio.setVisible(false);
            Label_costo_envio.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox_envioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculadoraPostal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculadoraPostal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculadoraPostal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculadoraPostal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        
        // Creación de los objetos Postal
        
        // Creación de postales y códigos de la categoría estadio.
        int conteo=8; 
        // Creación de postales y códigos de la categoría pagina principal.
        for (int i=0; i<8; i++){
            String codigos_p_principal = "FWC"+i;
            CalculadoraPostal.codigos_p_principal[i] = codigos_p_principal;
            CalculadoraPostal.pagina_principal[i] = new Postal("Pagina_principal",codigos_p_principal,150);
            //System.out.print(pagina_principal[i].getCodigo()+" ");
        }
        for (int i=0; i<10; i++){
            conteo =8+i;
            String codigo_estadio = "FWC"+conteo;
            codigos_estadios[i] = codigo_estadio;
            estadios[i] = new Postal("Estadio",codigo_estadio,100);
            //System.out.print(estadios[i].getCodigo()+" ");
        }
        
        // Creación de postales y códigos de la categoría Museo FIFA.
        for (int i=0; i<11; i++){
            conteo =19+i;
            String codigos_museo_f = "FWC"+conteo;
            CalculadoraPostal.codigos_m_fifa[i] = codigos_museo_f;
            CalculadoraPostal.museo_fifa[i] = new Postal("Museo FIFA",codigos_museo_f,150);
           // System.out.print(museo_fifa[i].getCodigo()+" ");
        }
        
        
        // Creación de postales y códigos de la categoría extra sticker.
        conteo=0;
        for (int i=0; i<4; i++){
            String prefijo_codigo = CalculadoraPostal.p_extra_sticker[i];
            for (int c=0; c<20; c++){
                String codigos_e_sticker = prefijo_codigo+c;
                CalculadoraPostal.codigos_e_sticker[conteo]= codigos_e_sticker;
                CalculadoraPostal.extra_sticker[conteo] = new Postal ("Extra Sticker",codigos_e_sticker,150);
                //System.out.print(extra_sticker[conteo].getCodigo()+" ");
                conteo++;
            }
        }
        
        // Creación de postales y códigos de la categoría postales.
        conteo =0;
        for (int i=0; i<32; i++){
            String prefijo_codigo = CalculadoraPostal.p_postales[i];
            for (int c=1; c<20; c++){
                String codigos_postales = prefijo_codigo+c;
                CalculadoraPostal.codigos_postales[conteo]= codigos_postales;
                CalculadoraPostal.postales[conteo] = new Postal ("Postales",codigos_postales,200);
                conteo++;
                //System.out.print(postales[i].getCodigo()+" ");
            }
        }
            
    

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculadoraPostal().setVisible(true);
            }
        });

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label_costo_envio;
    private static javax.swing.JLabel Label_direccion_envio;
    private javax.swing.JButton boton_agregar;
    private javax.swing.JButton boton_comprar;
    private javax.swing.JCheckBox jCheckBox_envio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_postales_compradas;
    private static javax.swing.JTextField jTextField_direccion_para_envio;
    private javax.swing.JList<String> jlista_postales;
    private javax.swing.JLabel label_cedula;
    private javax.swing.JLabel label_nombre;
    private javax.swing.JLabel label_seleccionar_postal;
    private javax.swing.JLabel label_seleccione_secciones;
    private javax.swing.JComboBox<String> menu_secciones;
    private javax.swing.JPanel panel_principal;
    private javax.swing.JTextField textbox_cedula;
    private javax.swing.JTextField textbox_nombre;
    // End of variables declaration//GEN-END:variables

}
